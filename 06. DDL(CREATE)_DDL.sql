-- 기본키
CREATE TABLE MEM_PRIMARYKEY(
    MEM_NO NUMBER CONSTRAINT MEM_PK PRIMARY KEY,
    MEM_ID VARCHAR2(20) NOT NULL UNIQUE,
    MEM_PW VARCHAR2(20) NOT NULL,
    MEM_NAME VARCHAR2(20) NOT NULL,
    GENDER CHAR(3) CHECK (GENDER IN ('남', '여')),
    PHONE VARCHAR2(15),
    EMAIL VARCHAR2(50)
    -- CONSTRAINT MEM_PK PRIMARY KEY(MEM_NO)

);

INSERT INTO MEM_PRIMARYKEY 
VALUES (1, 'USER01', 'PASS01', 'OHJANGSEOK', '남', '010-1111-1111', 'AAA@NAVER.COM');
INSERT INTO MEM_PRIMARYKEY
VALUES (2, 'USER02', 'PASS01', 'SUMENG', '여', '010-2222-2222', 'BBB@NAVER.COM');
INSERT INTO MEM_PRIMARYKEY
VALUES (2, 'USER03', 'PASS03', 'UDONG', '여',NULL,NULL);
--> PK 중복
INSERT INTO MEM_PRIMARYKEY
VALUES (NULL, 'USER03', 'PASS03', 'UDONG', '여',NULL,NULL);
--> PK NULL X
INSERT INTO MEM_PRIMARYKEY
VALUES (3, 'USER03', 'PASS03', 'UDONG', '여',NULL,NULL);

CREATE TABLE MEM_PRIMARYKEY2(
    MEM_NO NUMBER,
    MEM_ID VARCHAR2(20),
    MEM_PW VARCHAR2(20) NOT NULL,
    MEM_NAME VARCHAR2(20) NOT NULL,
    GENDER CHAR(3) CHECK (GENDER IN ('남', '여')),
    PHONE VARCHAR2(15),
    EMAIL VARCHAR2(50),
    PRIMARY KEY(MEM_NO, MEM_ID) --> 복합키
);

INSERT INTO MEM_PRIMARYKEY2
VALUES (1, 'USER01', 'PASS01', 'HONG', '남', '010-1111-1111', 'hong@naver.com');
INSERT INTO MEM_PRIMARYKEY2
VALUES (2, 'USER01', 'PASS01', 'HONG', '남', '010-1111-1111', 'hong@naver.com');
INSERT INTO MEM_PRIMARYKEY2
VALUES (2, 'USER02', 'PASS01', 'HONG', '남', '010-1111-1111', 'hong@naver.com');

--------------------------------------------------------------------------------------------------
-- 외래키
CREATE TABLE MEM_GRADE(
    GRADE_CODE NUMBER PRIMARY KEY,
    GRADE_NAME VARCHAR2(30) NOT NULL

);

INSERT INTO MEM_GRADE VALUES (10, 'NORMAL');
INSERT INTO MEM_GRADE VALUES (20, 'SUPER');
INSERT INTO MEM_GRADE VALUES (30, 'EXCELLENT');

SELECT * FROM MEM_GRADE;

CREATE TABLE MEM(
    MEM_NO NUMBER PRIMARY KEY,
    MEM_ID VARCHAR2(20) NOT NULL UNIQUE,
    MEM_PW VARCHAR2(20) NOT NULL,
    MEM_NAME VARCHAR2(20) NOT NULL,
    GENDER CHAR(3) CHECK (GENDER IN ('남','여')),
    PHONE VARCHAR2(15),
    EMAIL VARCHAR2(50),
    GRADE_ID NUMBER, -- REFERENCES MEM_GRADE-- (GRADE_CODE) : PK로 지정했기 때문에 생략 가능
    FOREIGN KEY(GRADE_ID) REFERENCES MEM_GRADE

);

INSERT INTO MEM
VALUES (1, 'USER01', 'PASS01', 'HONG', NULL, NULL, NULL, 10);
INSERT INTO MEM
VALUES (2, 'USER02', 'PASS02', 'KIM', NULL, NULL, NULL, 20);
INSERT INTO MEM
VALUES (3, 'USER03', 'PASS03', 'LEE', NULL, NULL, NULL, 10);
INSERT INTO MEM
VALUES (4, 'USER04', 'PASS04', 'AN', NULL, NULL, NULL, NULL);
INSERT INTO MEM
VALUES (5, 'USER05', 'PASS05', 'SIN', NULL, NULL, NULL, 40);

SELECT * FROM MEM;
SELECT MEM_NAME, GRADE_NAME
FROM MEM M, MEM_GRADE G
WHERE M.GRADE_ID = G.GRADE_CODE(+);

SELECT MEM_NAME, GRADE_NAME
FROM MEM M
LEFT JOIN MEM_GRADE G ON GRADE_ID = GRADE_CODE;

DELETE FROM MEM_GRADE
WHERE GRADE_CODE = 10; --> 자식테이블에서 사용 중이라 삭제 불가

-- FOREIGN KEY 삭제 옵션
-- 기본 삭제 옵션 : ON DELETE RESTRICTED (삭제 제한)

DELETE FROM MEM_GRADE
WHERE GRADE_CODE = 30;

SELECT * FROM MEM_GRADE;
INSERT INTO MEM_GRADE VALUES (30, 'EXCELLENT');

DROP TABLE MEM;

-- 1) ON DELETE SET NULL : 부모데이터 삭제 시 해당 데이터를 사용하고 있는 자식데이터를 NULL값으로 변경
CREATE TABLE MEM(
    MEM_NO NUMBER PRIMARY KEY,
    MEM_ID VARCHAR2(20) NOT NULL UNIQUE,
    MEM_PW VARCHAR2(20) NOT NULL,
    MEM_NAME VARCHAR2(20) NOT NULL,
    GENDER CHAR(3) CHECK (GENDER IN ('남','여')),
    PHONE VARCHAR2(15),
    EMAIL VARCHAR2(50),
    GRADE_ID NUMBER REFERENCES MEM_GRADE ON DELETE SET NULL

);

INSERT INTO MEM
VALUES (1, 'USER01', 'PASS01', 'HONG', NULL, NULL, NULL, 10);
INSERT INTO MEM
VALUES (2, 'USER02', 'PASS02', 'KIM', NULL, NULL, NULL, 20);
INSERT INTO MEM
VALUES (3, 'USER03', 'PASS03', 'LEE', NULL, NULL, NULL, 10);
INSERT INTO MEM
VALUES (4, 'USER04', 'PASS04', 'AN', NULL, NULL, NULL, NULL);

SELECT * FROM MEM;

DELETE FROM MEM_GRADE
WHERE GRADE_CODE = 10;

SELECT * FROM MEM_GRADE;
ROLLBACK;
DROP TABLE MEM;

-- 2) ON DELETE CASCADE : 자식데이터도 삭제
CREATE TABLE MEM(
    MEM_NO NUMBER PRIMARY KEY,
    MEM_ID VARCHAR2(20) NOT NULL UNIQUE,
    MEM_PW VARCHAR2(20) NOT NULL,
    MEM_NAME VARCHAR2(20) NOT NULL,
    GENDER CHAR(3) CHECK (GENDER IN ('남','여')),
    PHONE VARCHAR2(15),
    EMAIL VARCHAR2(50),
    GRADE_ID NUMBER REFERENCES MEM_GRADE ON DELETE CASCADE

);

INSERT INTO MEM
VALUES (1, 'USER01', 'PASS01', 'HONG', NULL, NULL, NULL, 10);
INSERT INTO MEM
VALUES (2, 'USER02', 'PASS02', 'KIM', NULL, NULL, NULL, 20);
INSERT INTO MEM
VALUES (3, 'USER03', 'PASS03', 'LEE', NULL, NULL, NULL, 10);
INSERT INTO MEM
VALUES (4, 'USER04', 'PASS04', 'AN', NULL, NULL, NULL, NULL);

SELECT * FROM MEM;

DELETE FROM MEM_GRADE
WHERE GRADE_CODE = 10;

--------------------------------------------------------------------------------------------------
-- <실습문제> --
CREATE TABLE TB_PUBLISHER(
    PUB_NO NUMBER CONSTRAINT PUBLISHER_PK PRIMARY KEY,
    PUB_NAME VARCHAR2(50) CONSTRAINT PUBLISHER_NN NOT NULL,
    PHONE VARCHAR2(15) 
);
COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사 전화번호';

INSERT INTO TB_PUBLISHER VALUES (1, '웅진', '02-111-1111');
INSERT INTO TB_PUBLISHER VALUES (2, '농심', '02-222-2222');
INSERT INTO TB_PUBLISHER VALUES (3, '남양', '02-333-3333');

SELECT * FROM TB_PUBLISHER;

CREATE TABLE TB_BOOK(
    BK_NO NUMBER CONSTRAINT BOOK_PK PRIMARY KEY,
    BK_TITLE VARCHAR2(70) CONSTRAINT BOOK_NN_TITLE NOT NULL,
    BK_AUTHOR VARCHAR2(40) CONSTRAINT BOOK_NN_AUTHOR NOT NULL,
    BK_PRICE NUMBER,
    BK_PUB_NO NUMBER REFERENCES TB_PUBLISHER ON DELETE CASCADE
);
COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자명';
COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사번호';
COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';

INSERT INTO TB_BOOK VALUES (1,'작업의 정석','김동준',150000,2);
INSERT INTO TB_BOOK VALUES (2,'살인사건','이상훈',12000,2);
INSERT INTO TB_BOOK VALUES (3,'고양이 키우기','김유신',12000,1);
INSERT INTO TB_BOOK VALUES (4,'계곡 즐기기','엄태원',18000,3);
INSERT INTO TB_BOOK VALUES (5,'아이폰활용','유형곤',11000,1);

SELECT * FROM TB_BOOK;

CREATE TABLE TB_MEMBER(
    MEMBER_NO NUMBER CONSTRAINT MEMBER_PK PRIMARY KEY,
    MEMBER_ID VARCHAR2(40) CONSTRAINT MEMBER_UQ UNIQUE,
    MEMBER_PW VARCHAR2(40) CONSTRAINT MEMBER_NN_PW NOT NULL,
    MEMBER_NAME VARCHAR2(10) CONSTRAINT MEMBER_NN_NAME NOT NULL,
    GENDER CHAR(1) CONSTRAINT MEMBER_CK_GEN CHECK (GENDER IN ('M','F')),
    ADDRESS VARCHAR2(100),
    PHONE VARCHAR2(15),
    STATUS CHAR(1) DEFAULT 'N' CONSTRAINT MEMBER_CK_STA CHECK (STATUS IN ('Y','N')),
    ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT MEMBER_NN_EN NOT NULL 
);

COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '아이디';
COMMENT ON COLUMN TB_MEMBER.MEMBER_PW IS '비밀번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원명';
COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN TB_MEMBER.PHONE IS '연락처';
COMMENT ON COLUMN TB_MEMBER.STATUS IS '탈퇴여부';
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';

INSERT INTO TB_MEMBER VALUES (1, 'USER01', 'PASS01', 'A', 'M', 'HOGEI', '010-1111-1111','N','2020-02-25');
INSERT INTO TB_MEMBER VALUES (2, 'USER02', 'PASS02', 'B', 'F', 'DOGOK', '010-2222-2222','N','2020-03-21');
INSERT INTO TB_MEMBER VALUES (3, 'USER03', 'PASS03', 'C', 'F', 'GANGNAM', '010-3333-3333','Y','2017-06-09');
INSERT INTO TB_MEMBER VALUES (4, 'USER04', 'PASS04', 'D', 'M', 'PANGYO', '010-4444-4444','N','2015-07-10');
INSERT INTO TB_MEMBER VALUES (5, 'USER05', 'PASS05', 'E', 'M', 'HAYANG', '010-5555-5555','N','2018-05-11');

SELECT * FROM TB_MEMBER;

CREATE TABLE TB_RENT(
    RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
    RENT_MEM_NO NUMBER CONSTRAINT RENT_FK_MEM REFERENCES TB_MEMBER ON DELETE SET NULL,
    RENT_BOOK_NO NUMBER CONSTRAINT RENT_FK_BOOK REFERENCES TB_BOOK ON DELETE SET NULL,
    RENT_DATE DATE DEFAULT SYSDATE
);

COMMENT ON COLUMN TB_RENT.RENT_NO IS '대여번호';
COMMENT ON COLUMN TB_RENT.RENT_MEM_NO IS '대여회원번호';
COMMENT ON COLUMN TB_RENT.RENT_BOOK_NO IS '대여도서번호';
COMMENT ON COLUMN TB_RENT.RENT_DATE IS '대여일';

INSERT INTO TB_RENT VALUES (1, 3, 2, '2020-06-10');
INSERT INTO TB_RENT VALUES (2, 3, 1, '2020-04-29');
INSERT INTO TB_RENT VALUES (4, 4, 5, '2020-03-29');

SELECT * FROM TB_RENT;

------------------------------------------------------------------------------------------------

-- KH 계정
-- SUBQUERY를 이용한 테이블 생성 (테이블 복사 개념)
CREATE TABLE EMPLOYEE_COPY
AS SELECT * FROM EMPLOYEE;

SELECT * FROM EMPLOYEE_COPY;
--> Column, Data_type, Data_value, NOT NULL만 복사

CREATE TABLE EMPLOYEE_COPY2
AS SELECT * FROM EMPLOYEE WHERE 1=0;

SELECT * FROM EMPLOYEE_COPY2;
--> 구조만 복사

CREATE TABLE EMPLOYEE_COPY3
AS SELECT EMP_ID, EMP_NAME, SALARY, SALARY*12 연봉 FROM EMPLOYEE;

SELECT * FROM EMPLOYEE_COPY3;
--> 산술연산 복사

ALTER TABLE EMPLOYEE_COPY ADD PRIMARY KEY (EMP_ID);
--> 기본키 추가

ALTER TABLE EMPLOYEE ADD FOREIGN KEY(DEPT_CODE) REFERENCES DEPARTMENT(DEPT_ID);
ALTER TABLE EMPLOYEE ADD FOREIGN KEY(JOB_CODE) REFERENCES JOB(JOB_CODE);
ALTER TABLE DEPARTMENT ADD FOREIGN KEY(LOCATION_ID) REFERENCES LOCATION(LOCAL_CODE);
--> 외래키 추가












